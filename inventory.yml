---
all:
  vars:
    domain: a0a0.org
    mylab_nolog: "{{ cluster_secure_log | bool | default(true) }}"
    ansible_user: lavender
    ansible_ssh_private_key_file: ~/.ssh/id_ed25519

    # Container networking overrides
    service_network: "ct-net"
    service_dns_servers:
      - "1.1.1.1"
      - "8.8.8.8"
    service_dns_search: "{{ domain }}"

    # basically non-ssh stuff, like LXC containers
    mylab_non_ssh: false

    test_index: "test-ansible"
    test_doc: '{"message": "Verification {{ ansible_date_time.iso8601 }}"}'

  children:
    # ................................................
    mylab:
      # .........................................
      # mylab hosts
      hosts:
        firefly:
          ansible_host: "localhost"
          ansible_connection: local

      # .........................................
      # mylab vars
      vars:
        mylab_results: []

      children:
        # ========================================
        mattermost_svc:
          hosts:
            firefly:
              # host_vars

          # .......................................
          # mattermost_svc only vars
          vars:
            debug_level: warn
            mattermost_data_dir: "{{ ansible_env.HOME }}/mattermost-data"
            mattermost_delete_data: false

            test_email: "test-{{ ansible_date_time.epoch }}@example.com"
            test_username: "testuser-{{ ansible_date_time.epoch }}"
            test_password: "Test123!"

        # ========================================
        elasticsearch_svc:
          hosts:
            firefly:
              # host_vars

          # .......................................
          # _svc only vars
          vars:
            debug_level: warn
            elasticsearch_data_dir: "{{ ansible_env.HOME }}/elasticsearch-data" #
            elasticsearch_password: "{{ lookup('env', 'ELASTIC_PASSWORD', default='') }}"
            elasticsearch_delete_data: false

        # ========================================
        redis_svc:
          hosts:
            firefly:
              # host_vars

          # .......................................
          # _svc only vars
          vars:
            debug_level: warn
            redis_data_dir: "{{ ansible_env.HOME }}/redis-data"
            redis_password: "{{ lookup('env', 'REDIS_PASSWORD', default='') }}"
            redis_delete_data: false

        # ========================================
        hashivault_svc:
          hosts:
            firefly:
              # host_vars

          # .......................................
          # _svc only vars
          vars:
            debug_level: warn
            vault_data_dir: "{{ ansible_env.HOME }}/vault-data"
            hashivault_delete_data: false

        # ========================================
        traefik_svc:
          hosts:
            firefly:
              # host_vars

          # .......................................
          # _svc only vars
          vars:
            debug_level: warn
            traefik_dashboard_enabled: true
            traefik_data_dir: "{{ ansible_env.HOME }}/traefik-data"
            traefik_force_reload: false
            traefik_delete_data: false
