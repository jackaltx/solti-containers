---
#

# ..................................................................................
# TODO this should be part of _base
- name: Ensure required directories exist
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
    mode: "0750"
  loop:
    - .config/systemd/user
    - .config/containers/systemd
    - .config/containers/systemd/env

# ..................................................................................
- name: Create environment file for Elasticsearch
  ansible.builtin.template:
    src: elasticsearch.env.j2
    dest: "{{ ansible_env.HOME }}/.config/containers/systemd/env/elasticsearch.env"
    mode: "0600"

# ....................................................................................
- name: Create Elasticsearch pod Quadlet
  containers.podman.podman_pod:
    name: elasticsearch
    state: quadlet
    dns: "{{ service_dns_servers }}"
    dns_search: "{{ service_dns_search }}"
    network: "{{ service_network }}"
    quadlet_dir: "{{ ansible_env.HOME }}/.config/containers/systemd"
    ports:
      - "127.0.0.1:{{ elasticsearch_port }}:9200"
      - "127.0.0.1:{{ elasticsearch_gui_port }}:8080"
    quadlet_options:
      - |
        [Service]
        Restart=always
      - |
        [Install]
        WantedBy=default.target

#
# - name: Create Elasticsearch pod via _base
#   ansible.builtin.include_tasks:
#     file: ../_base/tasks/containers.yml

# ....................................................................................
# See es_resource_limits.md for explanation of ulimit
#
- name: Create Elasticsearch node container Quadlet
  containers.podman.podman_container:
    name: elasticsearch-svc
    pod: elasticsearch.pod
    image: "{{ elasticsearch_image }}"
    state: quadlet
    quadlet_dir: "{{ ansible_env.HOME }}/.config/containers/systemd"
    volume:
      - "{{ elasticsearch_data_dir }}/config:/usr/share/elasticsearch/config:Z,U"
      - "{{ elasticsearch_data_dir }}/data:/usr/share/elasticsearch/data:Z,U"
      - "{{ elasticsearch_data_dir }}/logs:/usr/share/elasticsearch/logs:Z,U"
    env:
      # ES_JAVA_OPTS: "-Xms{{ elasticsearch_memory }} -Xmx{{ elasticsearch_memory }} -Djava.security.manager=allow -Djava.locale.providers=SPI,JRE -Des.logs.base_path=/usr/share/elasticsearch/logs -Des.logs.cluster_name=docker-cluster"
      discovery.type: "{{ elasticsearch_discovery_type }}"
      ELASTIC_PASSWORD: "{{ elasticsearch_password }}"
      xpack.security.enabled: "{{ elasticsearch_enable_security | string }}"
      bootstrap.memory_lock: "true"
    quadlet_options:
      - "EnvironmentFile={{ ansible_env.HOME }}/.config/containers/systemd/env/elasticsearch.env"
      - "Label=traefik.enable=true"

      # API router (port 9200) - Explicit service binding
      # Primary hostname
      - "Label=traefik.http.routers.elasticsearch0.rule=Host(`elasticsearch.{{ domain }}`)"
      - "Label=traefik.http.routers.elasticsearch0.entrypoints=websecure"
      - "Label=traefik.http.routers.elasticsearch0.service=elasticsearch0"
      - "Label=traefik.http.services.elasticsearch0.loadbalancer.server.port=9200"
      - "Label=traefik.http.routers.elasticsearch0.middlewares=secHeaders@file"

      # Secondary hostname (completely separate router)
      - "Label=traefik.http.routers.elasticsearch1.rule=Host(`es.{{ domain }}`)"
      - "Label=traefik.http.routers.elasticsearch1.entrypoints=websecure"
      - "Label=traefik.http.routers.elasticsearch1.service=vault-primary" # Use the same service
      - "Label=traefik.http.services.elasticsearch1.loadbalancer.server.port=9200"
      - "Label=traefik.http.routers.elasticsearch1.middlewares=secHeaders@file"

      - "Ulimit=memlock=-1:-1"
      - "Ulimit=nofile=65535:65535"
      - |
        [Unit]
        Description=Elasticsearch Container
        After=network-online.target
      - |
        [Service]
        Restart=always
        TimeoutStartSec=300
        TimeoutStopSec=70
        LimitMEMLOCK=infinity
        LimitNOFILE=65535
      - |
        [Install]
        WantedBy=default.target

# ....................................................................................
- name: Create Elasticvue container Quadlet
  containers.podman.podman_container:
    name: elasticsearch-gui
    pod: elasticsearch.pod
    image: "{{ elasticsearch_elasticvue_image }}"
    state: quadlet
    quadlet_dir: "{{ ansible_env.HOME }}/.config/containers/systemd"
    quadlet_options:
      - |
        [Unit]
        Description=Elasticsearch GUI Container
        After=network-online.target
      - |
        [Service]
        Restart=always
        TimeoutStartSec=300
        TimeoutStopSec=70
      - |
        [Install]
        WantedBy=default.target

# .......................................................................................
- name: reload systemd user daemon
  ansible.builtin.systemd:
    daemon_reload: yes
    scope: user

# .......................................................................................
- name: Enable and start rootless pod with systemd
  ansible.builtin.systemd:
    name: "{{ service_properties.name }}"
    state: started
    enabled: yes
    scope: user
