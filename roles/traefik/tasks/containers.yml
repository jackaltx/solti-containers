---
#
- name: Traefix Privileged
  ansible.builtin.debug:
    var: traefik_privileged
# .............................................................................
- name: Ensure external network exists
  become: "{{ traefik_privileged | default(true) }}"
  containers.podman.podman_network:
    name: "{{ traefik_external_network }}"
    driver: bridge
    opt:
      bridge_name: br11
    disable_dns: false
    state: present

# .............................................................................
- name: Create internal service network
  containers.podman.podman_network:
    name: "{{ traefik_internal_network }}"
    driver: bridge
    subnet: "{{ traefik_internal_subnet }}"
    disable_dns: false
    state: present

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# This is rootless logic
#
- name: Rootless container block
  when: traefik_privileged == false
  block:
    #
    - name: Create rootless Traefik pod
      containers.podman.podman_pod:
        name: traefik
        network: "{{ traefik_external_network }}"
        ports:
          - "8080:8080" # External ports now fine since on br11
          - "8443:8443" # External ports for HTTPS
          - "127.0.0.1:{{ traefik_dashboard_port }}:9000" # Dashboard still localhost only

    # .............................................................................
    - name: Check rootles Podman socket exists
      stat:
        path: "{{ ansible_env.XDG_RUNTIME_DIR }}/podman/podman.sock"
      register: socket_stat
      failed_when: not socket_stat.stat.exists
      changed_when: false

    # .............................................................................
    # Add debug to see pod status before container creation
    - name: Check pod status
      command: podman pod inspect traefik
      register: pod_info
      changed_when: false

    - name: Show pod info
      debug:
        var: pod_info.stdout_lines
        verbosity: 0

    # .............................................................................
    - name: Deploy rootless Traefik container
      containers.podman.podman_container:
        name: traefik-svc
        pod: traefik
        image: "{{ traefik_image }}"
        network: "{{ traefik_internal_network }}" # Add second network here
        state: started
        volume:
          - "{{ traefik_data_dir }}/config:/etc/traefik:Z,ro"
          - "{{ traefik_data_dir }}/acme:/etc/traefik/acme:Z"
          - "{{ traefik_data_dir }}/logs:/logs:Z"
          - "{{ ansible_env.XDG_RUNTIME_DIR }}/podman/podman.sock:/var/run/docker.sock:ro"
        env:
          LINODE_TOKEN: "{{ lookup('env', 'LINODE_TOKEN') }}"
        restart_policy: always

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
#  Priviliged pod/container
#
- name: Privileged container block
  become: true
  when: traefik_privileged
  block:
    #
    # Ensure Podman socket directory has correct permissions
    - name: Ensure Podman socket directory exists with correct permissions
      file:
        path: "/run/podman"
        state: directory
        mode: "0755" # Allow reading by others but writing only by root
        owner: root
        group: root

    # Start the Podman socket service
    - name: Enable and start Podman socket service
      systemd:
        name: podman.socket
        state: started
        enabled: yes
        daemon_reload: yes

    # .............................................................................
    - name: Check root Podman socket exists
      stat:
        path: "/run/podman/podman.sock"
      register: root_socket_stat
      failed_when: not root_socket_stat.stat.exists
      changed_when: false

    # .............................................................................
    - name: Create privileged Traefik pod
      containers.podman.podman_pod:
        name: traefik
        network: "{{ traefik_external_network }}"
        userns: "keep-id"
        ports:
          - "80:80"
          - "443:443"
          - "127.0.0.1:{{ traefik_dashboard_port }}:9000"

    # .............................................................................
    # Then we connect to the internal network when creating the container
    - name: Deploy privileged Traefik container
      containers.podman.podman_container:
        name: traefik
        pod: traefik
        image: "{{ traefik_image }}"
        network: "{{ traefik_internal_network }}" # Add second network here
        state: started
        volume:
          - "{{ traefik_data_dir }}/config:/etc/traefik:Z"
          - "{{ traefik_data_dir }}/acme:/etc/traefik/acme:Z"
          - "{{ traefik_data_dir }}/logs:/logs:Z"
          - "/run/podman/podman.sock:/var/run/docker.sock:ro"
        env:
          LINODE_TOKEN: "{{ lookup('env', 'LINODE_TOKEN') }}"
        restart_policy: always

# ===============================================================================
- name: Verify container status
  command: podman ps --format {% raw %}"{{.Names}}"{% endraw %} --filter "pod=traefik"
  register: container_status
  changed_when: false
