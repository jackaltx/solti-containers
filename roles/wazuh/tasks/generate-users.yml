---
# .......................................................................................
- name: Install passlib for secure password hashing
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop:
    - python3-passlib
    - python3-bcrypt # Add this to ensure bcrypt support
  when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

- name: Generate bcrypt hashes for all users using passlib
  set_fact:
    wazuh_users_with_hashes: "{{ wazuh_users | map('combine', {'hash': item.password | password_hash('bcrypt', rounds=12, ident='2a')}) | list }}"
  no_log: true
  loop: "{{ wazuh_users }}"
  loop_control:
    label: "{{ item.name }}"

# .......................................................................................
- name: Ensure certificate directory exists
  become: true
  ansible.builtin.file:
    path: "{{ wazuh_data_dir }}/certs/securityconfig"
    state: directory
    owner: "{{ dir_info.stat.uid }}"
    group: "{{ dir_info.stat.gid }}"
    mode: "0750"

# .......................................................................................
- name: Create internal_users.yml file
  ansible.builtin.template:
    src: internal_users.yml.j2
    dest: "{{ wazuh_data_dir }}/config/indexer/securityconfig/internal_users.yml"
    mode: "0640"
    owner: "{{ dir_info.stat.uid }}"
    group: "{{ dir_info.stat.gid }}"
  no_log: true

# .......................................................................................
- name: Create roles_mapping.yml file
  ansible.builtin.copy:
    dest: "{{ wazuh_data_dir }}/config/indexer/securityconfig/roles_mapping.yml"
    content: |
      ---
      # Role mappings for OpenSearch
      # Generated by Ansible on {{ ansible_date_time.iso8601 }}

      _meta:
        type: "rolesmapping"
        config_version: 2

      admin:
        reserved: true
        backend_roles:
        - "admin"
        
      readall:
        reserved: false
        backend_roles:
        - "readall"
    mode: "0640"
    owner: "{{ dir_info.stat.uid }}"
    group: "{{ dir_info.stat.gid }}"
  no_log: true

# .......................................................................................
- name: Create roles.yml file
  ansible.builtin.copy:
    dest: "{{ wazuh_data_dir }}/config/indexer/securityconfig/roles.yml"
    content: |
      ---
      # Roles for OpenSearch
      # Generated by Ansible on {{ ansible_date_time.iso8601 }}

      _meta:
        type: "roles"
        config_version: 2

      admin:
        reserved: true
        cluster_permissions:
        - "unlimited"
        index_permissions:
        - index_patterns:
          - "*"
          allowed_actions:
          - "unlimited"
          
      readall:
        reserved: false
        cluster_permissions:
        - "cluster_composite_ops_ro"
        - "indices:data/read/scroll"
        index_permissions:
        - index_patterns:
          - "*"
          allowed_actions:
          - "read"
          - "indices:monitor/*"
    mode: "0640"
    owner: "{{ dir_info.stat.uid }}"
    group: "{{ dir_info.stat.gid }}"
  no_log: true

- name: Create OpenSearch security configuration files
  ansible.builtin.copy:
    dest: "{{ wazuh_data_dir }}/config/indexer/securityconfig/{{ item.filename }}"
    content: "{{ item.content }}"
    mode: "0640"
    owner: "{{ dir_info.stat.uid }}"
    group: "{{ dir_info.stat.gid }}"
  loop:
    - filename: "config.yml"
      content: |
        _meta:
          type: "config"
          config_version: 2

    - filename: "action_groups.yml"
      content: |
        _meta:
          type: "actiongroups"
          config_version: 2

    - filename: "tenants.yml"
      content: |
        _meta:
          type: "tenants"
          config_version: 2

    - filename: "nodes_dn.yml"
      content: |
        _meta:
          type: "nodesdn"
          config_version: 2

    - filename: "whitelist.yml"
      content: |
        _meta:
          type: "whitelist"
          config_version: 2
  notify: restart wazuh indexer
