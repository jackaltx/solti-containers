---
# Post-installation configuration for Wazuh

- name: Wait for Wazuh Indexer to be ready
  ansible.builtin.uri:
    url: "https://127.0.0.1:{{ wazuh_indexer_port }}/_cluster/health"
    method: GET
    user: admin
    password: "{{ wazuh_admin_password }}"
    force_basic_auth: true
    validate_certs: false
    status_code: 200
  register: indexer_health
  until: indexer_health.status == 200
  retries: 30
  delay: 10
  no_log: true

- name: Display indexer health
  ansible.builtin.debug:
    var: indexer_health.json

- name: Wait for Wazuh API to be ready
  ansible.builtin.uri:
    url: "https://127.0.0.1:{{ wazuh_api_port }}/"
    method: GET
    validate_certs: false
    status_code: 200
  register: api_health
  until: api_health.status == 200
  retries: 30
  delay: 10

# ..................................................................................
# Create Wazuh API user if needed
- name: Get authentication token
  ansible.builtin.uri:
    url: "https://127.0.0.1:{{ wazuh_api_port }}/security/user/authenticate"
    method: GET
    user: wazuh
    password: wazuh
    force_basic_auth: true
    validate_certs: false
    status_code: [200, 401]
  register: auth_response
  failed_when: false
  no_log: true

- name: Create API user if default credentials work
  when: auth_response.status == 200
  block:
    - name: Get auth token with default credentials
      ansible.builtin.uri:
        url: "https://127.0.0.1:{{ wazuh_api_port }}/security/user/authenticate"
        method: GET
        user: wazuh
        password: wazuh
        force_basic_auth: true
        validate_certs: false
        status_code: 200
      register: token_response
      no_log: true

    - name: Create custom API user
      ansible.builtin.uri:
        url: "https://127.0.0.1:{{ wazuh_api_port }}/security/users"
        method: POST
        headers:
          Authorization: "Bearer {{ token_response.json.data.token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          username: "{{ wazuh_api_user }}"
          password: "{{ wazuh_api_password }}"
          allow_run_as: true
        validate_certs: false
        status_code: [200, 201, 400]
      register: user_creation
      failed_when: >
        user_creation.status not in [200, 201, 400] or
        (user_creation.status == 400 and 'already exists' not in (user_creation.json.message | default('')))
      no_log: true

    - name: Assign administrator role to API user
      ansible.builtin.uri:
        url: "https://127.0.0.1:{{ wazuh_api_port }}/security/roles/1/users"
        method: POST
        headers:
          Authorization: "Bearer {{ token_response.json.data.token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          userIds:
            - "{{ wazuh_api_user }}"
        validate_certs: false
        status_code: [200, 201, 400]
      register: role_assignment
      failed_when: >
        role_assignment.status not in [200, 201, 400] or
        (role_assignment.status == 400 and 'already exists' not in (role_assignment.json.message | default('')))
      no_log: true

# ..................................................................................
# Create default agent enrollment password if none exists
- name: Check agent authorization service status
  ansible.builtin.command: >
    podman exec wazuh-manager
    /var/ossec/bin/agent_control -m
  register: auth_status
  changed_when: false
  failed_when: false

- name: Generate agent enrollment password if needed
  ansible.builtin.command: >
    podman exec wazuh-manager
    /var/ossec/bin/manage_agents -n
  register: enrollment_result
  when: "'No key was found' in auth_status.stdout"
  changed_when: true

- name: Show agent enrollment password
  ansible.builtin.debug:
    msg: "{{ enrollment_result.stdout | regex_search('[0-9a-zA-Z]{16,}') }}"
  when: enrollment_result is defined

# ..................................................................................
# Configure Dashboards
- name: Wait for Dashboard to be ready
  ansible.builtin.uri:
    url: "https://127.0.0.1:8080/status"
    method: GET
    validate_certs: false
    status_code: 200
  register: dashboard_health
  until: dashboard_health.status == 200
  retries: 30
  delay: 10
  ignore_errors: true

- name: Display configuration completion message
  ansible.builtin.debug:
    msg: |
      Wazuh deployment is complete!

      Access URLs:
      - Wazuh Dashboard: https://localhost:8080 or https://wazuh.{{ domain }}
      - Wazuh API: https://localhost:{{ wazuh_api_port }}

      Login credentials:
      - Username: {{ wazuh_api_user }}
      - Password: (configured password)

      Configuration files:
      - Manager: {{ wazuh_data_dir }}/config/manager/
      - Indexer: {{ wazuh_data_dir }}/config/indexer/
      - Dashboard: {{ wazuh_data_dir }}/config/dashboard/

      Data directories:
      - Manager: {{ wazuh_data_dir }}/data/manager/
      - Indexer: {{ wazuh_data_dir }}/data/indexer/
      - Dashboard: {{ wazuh_data_dir }}/data/dashboard/
