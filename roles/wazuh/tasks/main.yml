---
#
# wazuh role - supports prepare, present, and absent states
# States:
#   prepare: First-time setup of directories and system configuration
#   present: Deploy and configure wazuh containers
#   absent: Remove containers (optionally remove data)

- name: Validate state parameter
  ansible.builtin.fail:
    msg: "wazuh_state must be one of: prepare, present, absent. Current value: {{ wazuh_state }}"
  when: wazuh_state not in ['prepare', 'present', 'absent']

- name: Test become capability
  ansible.builtin.command: whoami
  register: become_test
  changed_when: false

# =======================================================================
# PREPARATION (one-time setup)
# =======================================================================

- name: Prepare wazuh (one-time setup)
  when: wazuh_state == 'prepare'
  block:
    - name: Check if already prepared
      ansible.builtin.stat:
        path: "{{ wazuh_data_dir }}"
      register: data_dir_check

    - name: Fail if already prepared
      ansible.builtin.fail:
        msg: "wazuh appears to be already prepared. Directory {{ wazuh_data_dir }} exists."
      when: data_dir_check.stat.exists

    # ............................................................
    - name: Base prepare
      ansible.builtin.include_tasks:
        file: ../_base/tasks/prepare.yml

# =======================================================================
# DEPLOYMENT  (PRIVILEGED!!)
# =======================================================================

- name: Install Wazuh
  when: wazuh_state == 'present'
  become: true
  block:
    - name: Verify password is not default
      ansible.builtin.fail:
        msg: |
          WAZUH_ADMIN_PASSWORD must be set and not default. Either:
          1. Set wazuh_admin_password in your playbook
          2. Set WAZUH_ADMIN_PASSWORD environment variable
      when: >
        (wazuh_admin_password | default('')) == 'changeme'

    - name: Verify required directories exist
      become: true
      ansible.builtin.stat:
        path: "{{ wazuh_data_dir }}/{{ service_properties.config_dir }}"
      register: config_dir_check
      failed_when: not config_dir_check.stat.exists
      changed_when: false

    - name: Include prerequisites tasks
      ansible.builtin.include_tasks: prerequisites.yml

    - name: Include certificate tasks
      ansible.builtin.include_tasks: certificates.yml
      when: wazuh_generate_certs | bool

    - name: Ensure network setup
      ansible.builtin.include_tasks:
        file: "../_base/tasks/networks.yml"

    - name: Include container tasks
      ansible.builtin.include_tasks: quadlet_privileged.yml

    - name: Wait for services to start
      ansible.builtin.pause:
        seconds: 30
        prompt: "Waiting for Wazuh services to start..."

    - name: Include post-setup tasks
      ansible.builtin.include_tasks: post_setup.yml

# =======================================================================
# CLEANUP
# =======================================================================

- name: Remove Wazuh
  when: wazuh_state == 'absent'
  become: true
  block:
    # ...............................................................................
    - name: Include cleanup tasks
      ansible.builtin.include_tasks:
        file: "../_base/tasks/cleanup.yml"
      vars:
        service_state: absent
        service_delete_data: true # "{{ wazuh_delete_data }}"
