# verify-mattermost.yml
---
- name: Verify Mattermost Installation
  hosts: mattermost_svc
  vars:
    test_email: "test-{{ ansible_date_time.epoch }}@example.com"
    test_username: "testuser-{{ ansible_date_time.epoch }}"
    test_password: "Test123!"
    # Use the same variables as deploy
    mattermost_postgres_password: "your_secure_password"
    mattermost_db_name: "mattermost"
    mattermost_db_user: "mmuser"
    mattermost_port: 8065
    mattermost_site_url: "http://localhost:{{ mattermost_port }}"

  tasks:
    - name: Verify Mattermost pod is running
      command: podman pod ps --format {% raw %}"{{.Name}}"{% endraw %}
      register: pod_status
      failed_when: "'mattermost' not in pod_status.stdout"
      changed_when: false

    - name: Show pod status
      debug:
        var: pod_status.stdout_lines

    - name: Verify Mattermost containers are running
      command: podman ps --format {% raw %}"{{.Names}}"{% endraw %} --filter "pod=mattermost"
      register: container_status
      failed_when: >
        'mattermost-db' not in container_status.stdout or
        'mattermost-svc' not in container_status.stdout
      changed_when: false

    - name: Show container status
      debug:
        var: container_status.stdout_lines

    # Check PostgreSQL
    - name: Check PostgreSQL connection
      command: >
        podman exec 
        -e PGPASSWORD="{{ mattermost_postgres_password }}"
        mattermost-db 
        psql -U {{ mattermost_db_user }} -d {{ mattermost_db_name }} -c "SELECT version();"
      register: postgres_version
      changed_when: false
      no_log: true

    - name: Show PostgreSQL version
      debug:
        var: postgres_version.stdout_lines

    - name: Check PostgreSQL tables
      command: >
        podman exec
        -e PGPASSWORD="{{ mattermost_postgres_password }}"
        mattermost-db 
        psql -U {{ mattermost_db_user }} -d {{ mattermost_db_name }} 
        -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';"
      register: table_count
      changed_when: false
      no_log: true

    - name: Show table count
      debug:
        var: table_count.stdout_lines

    # Check Mattermost API
    - name: Wait for Mattermost to be ready
      uri:
        url: "{{ mattermost_site_url }}/api/v4/system/ping"
        method: GET
        status_code: 200
      register: ping_result
      until: ping_result.status == 200
      retries: 30
      delay: 5
      no_log: false

    - name: Get Mattermost server status
      uri:
        url: "{{ mattermost_site_url }}/api/v4/system/ping"
        method: GET
      register: status_result
      no_log: true

    - name: Show Mattermost status
      debug:
        var: status_result

    # Check logs for any errors
    - name: Check Mattermost logs for errors
      command: >
        podman logs --tail 100 mattermost-svc
      register: mattermost_logs
      changed_when: false

    - name: Show recent error logs if any
      debug:
        msg: "{{ mattermost_logs.stdout_lines | select('match', '.*error.*') | list }}"

    # Check config accessibility
    - name: Verify config file permissions
      command: >
        podman exec mattermost-svc
        ls -l /mattermost/config/config.json
      register: config_perms
      changed_when: false

    - name: Show config permissions
      debug:
        var: config_perms.stdout_lines

    # Memory usage
    - name: Get container resource usage
      command: >
        podman stats --no-stream --format "table {% raw %}{{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}{% endraw %}"
        mattermost-svc mattermost-db
      register: resource_usage
      changed_when: false

    - name: Show resource usage
      debug:
        var: resource_usage.stdout_lines
