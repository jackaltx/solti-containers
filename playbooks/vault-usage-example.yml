---
# using-vault-with-ansible.yml
# Example of how to use HashiVault secrets in your Ansible playbooks

- name: Setup HashiVault Lookup for Credentials
  hosts: localhost
  gather_facts: false
  vars:
    vault_addr: "http://localhost:8200"
    vault_keys_dir: "{{ lookup('env', 'HOME') }}/vault-secrets"
    vault_token_file: "{{ vault_keys_dir }}/vault-admin-credentials.txt"
  
  tasks:
    - name: Check if token file exists
      stat:
        path: "{{ vault_token_file }}"
      register: token_file_stat
    
    - name: Extract token from file if it exists
      when: token_file_stat.stat.exists
      block:
        - name: Read token file
          slurp:
            src: "{{ vault_token_file }}"
          register: token_file_content
        
        - name: Extract token using regex
          set_fact:
            vault_token: "{{ token_file_content['content'] | b64decode | regex_findall('VAULT_TOKEN=(.*?)($|\\n)') | first | first }}"
          no_log: true
    
    - name: Set VAULT_ADDR and VAULT_TOKEN environment variables
      set_fact:
        ansible_environment:
          VAULT_ADDR: "{{ vault_addr }}"
          VAULT_TOKEN: "{{ vault_token }}"
      no_log: true

# Example of deploying Elasticsearch using secrets from Vault
- name: Deploy Elasticsearch with HashiVault secrets
  hosts: elasticsearch_svc
  gather_facts: true
  vars:
    # Use lookup plugin to fetch secrets from HashiVault
    # Requires setting VAULT_ADDR and VAULT_TOKEN env variables
    elasticsearch_password: "{{ lookup('hashi_vault', 'secret=kv/data/services/elasticsearch:elastic_password') }}"
    
    # Lookup with token from previous play
    es_ro_token: "{{ lookup('hashi_vault', 
                      'secret=kv/data/services/elasticsearch:es_ro_token 
                       token=' + hostvars['localhost']['vault_token'] + 
                       ' url=http://localhost:8200') }}"
    
    es_rw_token: "{{ lookup('hashi_vault', 
                      'secret=kv/data/services/elasticsearch:es_rw_token 
                       token=' + hostvars['localhost']['vault_token'] + 
                       ' url=http://localhost:8200') }}"
    
    # Other Elasticsearch settings
    elasticsearch_state: present
    elasticsearch_data_dir: "{{ ansible_env.HOME }}/elasticsearch-data"
  
  tasks:
    - name: Debug secret retrieval (normally hidden)
      debug:
        msg: "Using secrets from Vault (in production, never show these values)"
        verbosity: 3  # Only show with -vvv
    
    - name: Include Elasticsearch role
      include_role:
        name: elasticsearch
      # The role uses elasticsearch_password variable automatically

# Example of deploying Mattermost using secrets from Vault
- name: Deploy Mattermost with HashiVault secrets
  hosts: mattermost_svc
  gather_facts: true
  vars:
    # Use HashiVault for password
    mattermost_postgres_password: "{{ lookup('hashi_vault', 'secret=kv/data/services/mattermost:mm_db_password') }}"
    
    # Other Mattermost settings
    mattermost_state: present
    mattermost_data_dir: "{{ ansible_env.HOME }}/mattermost-data"
  
  tasks:
    - name: Include Mattermost role
      include_role:
        name: mattermost
      # The role uses mattermost_postgres_password variable automatically

# Example of deploying Redis using secrets from Vault
- name: Deploy Redis with HashiVault secrets
  hosts: redis_svc
  gather_facts: true
  vars:
    # Use HashiVault for password
    redis_password: "{{ lookup('hashi_vault', 'secret=kv/data/services/redis:redis_password') }}"
    
    # Other Redis settings
    redis_state: present
    redis_data_dir: "{{ ansible_env.HOME }}/redis-data"
  
  tasks:
    - name: Include Redis role
      include_role:
        name: redis
      # The role uses redis_password variable automatically
